/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guiViews;

import daos.GameDao;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
/**
 *
 * @author windows
 */
public class LeaderboardScreen extends javax.swing.JFrame {
    
    
    GameDao gameDao = new GameDao();
    static int userId;
    static String username;
     String []players;
    // int [][] scores;
    
    
    
    /**
     * Creates new form leaderboardScreen
     */
    public LeaderboardScreen(int userId, String username) {
        this.userId = userId;
        this.username = username;
        
        initComponents();
        displayScores();
    }
    
    public void displayScores(){
        DefaultTableModel model = (DefaultTableModel) scoreTable.getModel();
        model.setRowCount(0);
        
        String []players = getPlayers();
        int[][]scores = getPlayerScores(players);
        
        
        for(int i=0; i<players.length; i++){
            Vector row = new Vector();
            row.add(players[i]);
            
             for(int j=0; j<scores[i].length; j++){
                 
                 row.add(Integer.toString(scores[i][j]));
             }
             model.addRow(row);
        }
    }
   
    
    public int[][] getPlayerScores(String [] players){
        int [][] scores = new int[players.length][3];
        
       
        
        
        String p1 = "";
        String p2 ="";
        String gameResult ="";
        String games = gameDao.getLeagueTable();
        String [] gamesArr = games.split("\\s*\n\\s*");
        String [] gameDetails;
        
         for(int i=0; i<gamesArr.length; i++){
            gameDetails = gamesArr[i].split("\\s*,\\s*");
            p1 = gameDetails[1];
            p2 = gameDetails[2];
            gameResult = gameDetails[3];
            
            if(gameResult.equals("1")){
                for(int j=0;j<players.length;j++){
                    if(p1.equals(players[j])){
                        scores[j][0]+=1;
                    }else if(p2.equals(players[j])){
                        scores[j][1]+=1;
                    }
                }
            }else if(gameResult.equals("2")){
                for(int j=0;j<players.length;j++){
                    if(p1.equals(players[j])){
                        scores[j][1]+=1;
                    }else if(p2.equals(players[j])){
                        scores[j][0]+=1;
                    }
                }
            }else if(gameResult.equals("3")){
                for(int j=0;j<players.length;j++){
                    if(p1.equals(players[j])){
                        scores[j][2]+=1;
                    }else if(p2.equals(players[j])){
                        scores[j][2]+=1;
                    }
                }
            }
            
            
         }
        for(int i=0; i<scores.length; i++){
            System.out.print(players[i] + ": ");
            for(int j = 0; j<scores[i].length; j++){
                System.out.print(" "+ scores[i][j]);
                
            }
            System.out.println("");
        }
        
        return scores;
    }
    
    public String[] getPlayers(){
        String [] players;
        ArrayList<String> playerList = new ArrayList<>();;
  
        String games = gameDao.getLeagueTable();
        String [] gamesArr = games.split("\\s*\n\\s*");
        String [] gameDetails;
        boolean alreadyInList =false;
        
         for(int i=0; i<gamesArr.length; i++){
            gameDetails = gamesArr[i].split("\\s*,\\s*");
            for(int j=1;j<3;j++){
                alreadyInList = false;
                for(int k=0; k<playerList.size(); k++){                  
                    if(gameDetails[j].equals(playerList.get(k))){
                        alreadyInList = true;   
                    }
                }
                if(alreadyInList==false){
                     playerList.add(gameDetails[j]);
                     System.out.println("ADDED " +gameDetails[j]);
                }      
            }          
         }
         players = new String[playerList.size()];
         players = (String[]) playerList.toArray(players);         
         
         return players;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scoreTable = new javax.swing.JTable();
        toMenuBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLbl.setText("Leaderboard");

        scoreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Player", "Wins", "Losses", "Draws"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(scoreTable);
        if (scoreTable.getColumnModel().getColumnCount() > 0) {
            scoreTable.getColumnModel().getColumn(0).setResizable(false);
            scoreTable.getColumnModel().getColumn(1).setResizable(false);
            scoreTable.getColumnModel().getColumn(2).setResizable(false);
            scoreTable.getColumnModel().getColumn(3).setResizable(false);
        }

        toMenuBtn.setText("Menu");
        toMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toMenuBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(toMenuBtn)
                        .addGap(38, 38, 38))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(toMenuBtn)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toMenuBtnActionPerformed
        // TODO add your handling code here:
        MenuScreen menu = new MenuScreen(userId, username);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_toMenuBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LeaderboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LeaderboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LeaderboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LeaderboardScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LeaderboardScreen(userId, username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable scoreTable;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JButton toMenuBtn;
    // End of variables declaration//GEN-END:variables
}
